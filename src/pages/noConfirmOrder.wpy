<style>
.all {
  margin-bottom: 100rpx;
}
.no_order {
  text-align: center;
  margin-top: 200rpx;
  color: #292929;
  font-size: 28rpx;
}
.commodity {
  margin: 20rpx;
}
.cart{
  width: 40rpx;
  height: 40rpx;
  margin-top: 10rpx;
}
.commodityTitle1{
  width: 500rpx;
  margin-top: -30rpx;
  padding: 20rpx;
  display: flex;
  justify-content: space-between;
  width: 98%;
  border: 2rpx solid #FAF9F9;
  border-radius: 20rpx;
  box-sizing: border-box;
  background: #FAF9F9;
}
.commodityImg1{
  width: 210rpx;
  height: 270rpx;
  border: 2rpx solid #faf9f9;
  border-radius: 20rpx;
}
.commodityView1{
  margin-bottom: 20rpx;
  font-size: 28rpx;
}
.right{
  width: 400rpx;
}
.commodityBottom3{
  font-size: 20rpx;
  line-height: 55rpx;
  height: 60rpx;
  padding-top: 10rpx;
  margin-top: 20rpx;
}
.commodityBottom2{
  width: 575rpx;
  font-size: 36rpx;
  line-height: 60rpx;
  height: 60rpx;
  padding-top: 10rpx;
  margin-top: 20rpx;
  color:#C70101;
  text-align: center;
}
.address{
  border-top: 1rpx solid #eee;
  font-size: 28rpx;
  color:#333;
  line-height: 60rpx;
  margin-bottom: 20rpx;
  clear: both;
}
.address text{
  margin-right: 100rpx;
}
.btn {
  width: 140rpx;
  height: 30rpx;
  line-height: 30rpx;
  color: #333;
  font-size: 22rpx;
  margin-top: 10rpx;
}
.btn2 {
  width: 160rpx;
  height: 60rpx;
  line-height: 60rpx;
  color: #fff;
  font-size: 24rpx;
  background-color: #C61E1E;
  text-align: center;
}
.buttons{
  position: relative;
  top: -650rpx;
  right: -500rpx;
  float:left;
}
.order{
  border-bottom: 10rpx solid #eee;
}
</style>
<template>
  <view class="all">
    <view>
      <view class="no_order" wx:if="{{orderList.length==0}}">暂无数据</view>
      <view wx:else class="commodity">
        <repeat for='{{orderList}}' for-item='item'>
          <view class="order">
            <view class="address">
              <view>收货人：{{ item.order_shipment.shipment_detail.real_name }}</view>
              <view>联系电话：{{ item.order_shipment.shipment_detail.mobile }}</view>
              <view>地址：{{ item.order_shipment.shipment_detail.area + item.order_shipment.shipment_detail.address }}</view>
            </view>
            <!-- 推荐 -->
            <repeat for='{{ item.order_product }}' item='items'>
              <view class="commodityTitle1">
                <image src='{{ imgUrl2 + items.product.img }}' class="commodityImg1">
                <view class="right">
                  <view class="commodityView1">{{ items.product.name }}</view>
                  <view class="commodityBottom3">
                    <view class="btn">x{{ items.num }}</view>
                  </view>
                  <view class="commodityBottom2">￥{{ items.product.price }}</view>
                </view>
              </view>
            </repeat>
            <view class="address">
              <view>订单号：{{ item.order_number }}</view>
              <view>购买时间：{{ item.updated_at }}</view>
              <view>状态：{{ item.status}}</view>
              <!-- <view>快递公司：紫枫叶紫枫叶紫枫叶紫枫叶紫枫叶</view> -->
              <view class="buttons">
                <view class="btn2" @tap='comfirm' data-id='{{item.id}}'>确认收货</view>
              </view>
            </view>
          </view>
        </repeat>
      </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
export default class NoConfirmOrder extends wepy.page {
  // 页面配置
  config = {
    navigationBarTitleText: '未确认账单'
  };
  // 生命组件ID
  components = {
    
  };
  // alias example
  data = {
    motto: 'Hello World',
    userInfo: {},
    imgUrl: '',
    imgUrl2: '',
    orderList: [],
    getUrl: '',
    indexs: ''
  };
  methods = {
    bindViewTap() {
      console.log('button clicked')
    }
  };
  comfirm(e) {
    var id = e.currentTarget.dataset.id
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/affirmOrder/${id}`,
      method: 'POST',
      header: {
        AuthrizeOpenId: this.$parent.globalData.open_id
      },
      success: data => {
        if (data.statusCode === 200) {
          wepy.showToast({
            title: '收货成功',
            icon: 'success',
            duration: 2000
          })
          this.noConfirmOrder()
          this.$apply()
        }
      }
    })
  }
  async onReachBottom() {
    if (!this.getUrl) {
      this.prompt = false
      this.$apply()
      return
    }
    await wx.request({
      url: this.getUrl,
      method: 'GET',
      header: {
        AuthrizeOpenId: this.$parent.globalData.open_id
      },
      data: {
        status: 'shiped'
      },
      success: data => {
        if (data.statusCode === 200) {
          let orderList = data.data.data.orders.data
          // 将新的请求结果加入原有数组  concat连接两个或更多的数组，并返回结果。
          this.orderList = this.orderList.concat(orderList)
          // 更新下一页请求地址
          this.getUrl = data.data.data.orders.meta.pagination.links.next
        }
      }
    })
  };
  noConfirmOrder() {
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/orderList`,
      method: 'GET',
      header: {
        AuthrizeOpenId: this.$parent.globalData.open_id
      },
      data: {
        status: 'shiped'
      },
      success: data => {
        if (data.statusCode === 200) {
          this.orderList = data.data.data.orders.data
          this.$apply()
          this.getUrl = data.data.data.orders.meta.pagination.links.next
          this.indexs = data.data.data.orders.meta.pagination.current_page
        }
      }
    })
  }

  onLoad(options) {
    this.imgUrl2 = this.$parent.globalData.imgUrl2
    this.noConfirmOrder()
  }
}
</script>
